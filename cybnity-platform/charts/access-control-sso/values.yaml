keycloak:
    ## @param nameOverride String to partially override common.names.fullname
    ##
    nameOverride: "access-control-sso-system"
    ## @param fullnameOverride String to fully override common.names.fullname
    ##
    fullnameOverride: "access-control-sso-system"

    ## Keycloak authentication parameters
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/keycloak#admin-credentials
    ##
    auth:
      ## @param auth.adminUser Keycloak administrator user
      ##
      adminUser: admin
      ## @param auth.adminPassword Keycloak administrator password for the new user
      ##
      adminPassword: "admin"

    ## @param nodeSelector Node labels for pod assignment
    ## Assigning to node dedicated to layer
    ## cybnity.io/domains-io-area: "true"
    ## cybnity.io/domains-area: "true"
    ## cybnity.io/user-interfaces-area: "true"
    ## cybnity.io/infrastructure-services-area: "true"
    nodeSelector:
      cybnity.io/user-interfaces-area: "true"

    ## @param replicaCount Number of Keycloak replicas to deploy
    ##
    replicaCount: 3

    ## Service configuration
    ##
    service:
      type: LoadBalancer

    ## @section Metrics parameters
    ##

    ## Metrics configuration
    ##
    metrics:
      ## @param metrics.enabled Enable exposing Keycloak statistics
      ## ref: https://github.com/bitnami/containers/tree/main/bitnami/keycloak#enabling-statistics
      ##
      enabled: true
      ## Keycloak metrics service parameters
      ##
      service:
        ## @param metrics.service.annotations [object] Annotations for enabling prometheus to access the metrics endpoints
        ##
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "{{ .Values.metrics.service.ports.http }}"

    ## @section Exposure parameters
    ##

    ## Network Policy configuration
    ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
    ##
    networkPolicy:
      ## @param networkPolicy.enabled Enable the default NetworkPolicy policy
      ##
      enabled: true
      ## @param networkPolicy.allowExternal Don't require client label for connections
      ## The Policy model to apply. When set to false, only pods with the correct
      ## client label will have network access to the ports Keycloak is listening
      ## on. When true, Keycloak will accept connections from any source
      ## (with the correct destination port).
      ##
      allowExternal: false
      ## @param networkPolicy.additionalRules Additional NetworkPolicy rules
      ## Note that all rules are OR-ed.
      ## Example:
      ## additionalRules:
      ##   - matchLabels:
      ##       - role: frontend
      ##   - matchExpressions:
      ##       - key: role
      ##         operator: In
      ##         values:
      ##           - frontend
      ##
      additionalRules: {}

    ## @section keycloak-config-cli parameters

    ## Configuration for keycloak-config-cli
    ## ref: https://github.com/adorsys/keycloak-config-cli
    ##
    keycloakConfigCli:
      ## @param keycloakConfigCli.enabled Whether to enable keycloak-config-cli job
      ##
      enabled: false
      nodeSelector:
        cybnity.io/user-interfaces-area: "true"

    postgresql:
      nameOverride: "access-control-db-system"
      fullnameOverride: "access-control-db-system"
      auth:
        postgresPassword: "bitnami"
        username: bn_keycloak
        password: "bitnami"
        database: bitnami_keycloak
        existingSecret: ""
      ## @section PostgreSQL Primary parameters
      ##
      primary:
        nodeSelector:
          cybnity.io/user-interfaces-area: "true"
      ## @section PostgreSQL read only replica parameters (only used when `architecture` is set to `replication`)
      ##
      readReplicas:
        nodeSelector:
          cybnity.io/user-interfaces-area: "true"
      ## @section Backup parameters
      ## This section implements a trivial logical dump cronjob of the database.
      ## This only comes with the consistency guarantees of the dump program.
      ## This is not a snapshot based roll forward/backward recovery backup.
      ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
      backup:
        nodeSelector:
          cybnity.io/user-interfaces-area: "true"


    ## External PostgreSQL configuration
    ## All of these values are only used when postgresql.enabled is set to false
    ## @param externalDatabase.host Database host
    ## @param externalDatabase.port Database port number
    ## @param externalDatabase.user Non-root username for Keycloak
    ## @param externalDatabase.password Password for the non-root username for Keycloak
    ## @param externalDatabase.database Keycloak database name
    ## @param externalDatabase.existingSecret Name of an existing secret resource containing the database credentials
    ## @param externalDatabase.existingSecretPasswordKey Name of an existing secret key containing the database credentials
    ##
    externalDatabase:
      host: ""
      port: 5432
      user: bn_keycloak
      database: bitnami_keycloak
      password: "bitnami"
      existingSecret: ""
      existingSecretPasswordKey: ""
