name: Build and Push Chart to OCI Regsitry
run-name: Chart push to OCI registry
on:
  workflow_call:
    inputs:
      config-path:
        required: true
        type: string
      chart-path:
        description: "Path to chart"
        required: true
        type: string
      update-dependencies:
        description: Sets whether or not to update dependencies before packaging
        default: true
        type: boolean
      registry-url:
        description: URL of registry, excluding the protocol
        required: true
        type: string
      repository:
        description: Repository in registry to push to
        default: charts
        type: string
      username:
        description: Username to login to registry
        type: string
      password:
        description: Password to login to registry
        type: string
      delete-tgzs:
        description: Enables step to delete all `*.tgz` files
        default: true
        type: boolean
jobs:
  publish:
    name: Deploy package to remote registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      ARTIFACT_VERSION: ${{ inputs.package_release_name }}
      DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_ACCESS_ACCOUNT }}
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_ACCESS_TOKEN }}
    steps:
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.9.0
      - if: inputs.update-dependencies
        name: Update Chart Dependencies
        shell: bash
        run: |
          helm dependency update ${{ inputs.chart-path }}
      - name: Package Chart
        shell: bash
        run: |
          helm package ${{ inputs.chart-path }}
      - name: Helm Registry Login
        shell: bash
        run: |
          helm registry login \
          --username ${{ inputs.username }} \
          --password ${{ inputs.password }} \
          ${{ inputs.registry-url }}
      - name: Push Chart
        shell: bash
        run: |
          for file in *.tgz; do
            [ -f "$file" ] || continue
            helm push $file oci://${{ inputs.registry-url }}/${{ inputs.repository }}
          done
      - name: Delete Chart Tarballs
        if: inputs.delete-tgzs == true
        shell: bash
        run: |
          for file in *.tgz; do
            [ -f "$file" ] || continue
            rm $file
          done
