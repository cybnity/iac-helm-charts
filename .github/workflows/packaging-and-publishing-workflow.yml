name: Package & Publish Workflow

on:
  push:
    branches:
      - main
    #paths:
    #  - '**/*.yaml'
    #  - '**/*.yml'

jobs:
  package:
    name: Platform Packaging
    # depending on default permission settings for the organization (contents being read-only or read-write for workloads), required to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: read
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
      PACKAGED_PROJECT: "cybnity-platform"
      PROJECT_VERSION: "0.1.0"
      # See doc : https://github.com/atomicfi-engineering/action-build-push-chart-oci-registry
      # Path to chart. Required
      CHART_DEST: "packages"
      # Sets whether or not to update dependencies before packaging
      # Default: true
      update-dependencies: true
    outputs:
      artifact_fullname: ${{ env.ARTIFACT_FULLNAME }}
    steps:
      - name: Helm source codes checkout
        id: checkout_step
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          token: ${{ github.token }}
          ref: ${{ inputs.branch_name }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
      - name: Install Helm tool
        uses: azure/setup-helm@v3

      - if: ${{ env.update-dependencies }}
        name: Update Chart Dependencies
        shell: bash
        run: |
          helm dependency update ${{ env.PACKAGED_PROJECT }}
          
      - name: Helm Packaging
        run: |
          PACKAGE_VERSION_NAME="$PROJECT_VERSION+$(git rev-parse --short "$GITHUB_SHA")"
          echo "PACKAGE_VERSION_NAME=$PACKAGE_VERSION_NAME" >> $GITHUB_ENV
          helm package ${{ env.PACKAGED_PROJECT }} --version "$PACKAGE_VERSION_NAME" -d ${{ env.CHART_DEST }}
          ARTIFACT_FULLNAME="${{ env.PACKAGED_PROJECT }}-$PACKAGE_VERSION_NAME.tgz"
          echo "ARTIFACT_FULLNAME=$ARTIFACT_FULLNAME" >> $GITHUB_ENV
          CHART_PATH="${{ env.CHART_DEST }}/${{ env.ARTIFACT_FULLNAME }}"
          echo "CHART_PATH=$CHART_PATH" >> $GITHUB_ENV
          
      - uses: actions/upload-artifact@v3
        # See docc at https://github.com/actions/upload-artifact
        with:
          name: ${{ env.ARTIFACT_FULLNAME }}
          path: ${{ env.CHART_PATH }}
          if-no-files-found: error
          retention-days: 5
    
  publish:
    name: Repository Publishing
    needs: [package]
    if: success()
    permissions:
      # permits an action to upload and publish packaged files
      contents: write
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_ACCESS_ACCOUNT }}
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_ACCESS_TOKEN }}
      OCI_PATH: ${{ secrets.DOCKERHUB_OLIVIER_PATH }}
      PACKAGED_CHART_PATH: ${{ needs.package.outputs.artifact_fullname }}
      # URL of registry, excluding the protocol. Required.
      registry-url: registry-1.docker.io
      # Repository in registry to push to
      repository: cybnity
      # Username to login to registry
      username: cybnity
      # Password to login to registry
      # password: ${{ secrets.DOCKERHUB_OLIVIER_PATH }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.PACKAGED_CHART_PATH }}
          
      - name: Helm Registry Login
        shell: bash
        run: |
          helm registry login \
          --username ${{ env.username }} \
          --password ${{ env.OCI_PATH }} \
          ${{ env.registry-url }}
          
      - name: Push Chart
        shell: bash
        run: |
          # Store sha version of artifact
          helm push ${{ env.PACKAGED_CHART_PATH}} oci://${{ env.registry-url }}/${{ env.repository }}
